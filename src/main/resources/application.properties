spring.application.name=portfolioWebAPI

server.port=8080

## development system 개발계
spring.profiles.active=dev

## development system 운영계
#spring.profiles.active=prod

## server.error.whitelabel.enabled=false
server.error.include-message=on-param
server.error.include-stacktrace=never
server.error.include-exception=true
server.error.include-binding-errors=on-param
server.tomcat.allow-trace=false

## 응답헤더 제거
server.server-header= 

## 디렉토리목록화 방지
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

## swaggerdoc
springdoc.version=v1.0.0
springdoc.packages-to-scan=com._2je7.pofol.Controller
springdoc.default-consumes-media-type=application/json;charset=UTF-8
springdoc.default-produces-media-type=application/json;charset=UTF-8
springdoc.swagger-ui.path=/api-docs
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.operations-sorter=alpha
springdoc.swagger-ui.tags-sorter=alpha
springdoc.api-docs.path=/api-docs/json
springdoc.api-docs.groups.enabled=true
springdoc.cache.disabled=true
springfox.documentation.swagger.use-model-v3=false

## Access Token expire (hour)
api.access.token.expire=12

## Refresh Token expire (hour)
api.refresh.token.expire=24

## File Size Setting
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

## DB

spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = /* ping */ SELECT 1
spring.datasource.timeBetweenEvictionRunsMillis = 1800000
spring.datasource.closeMethod=close
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=10
# 30초 (커넥션 타임아웃)
spring.datasource.hikari.connection-timeout=30000
# 10분 (미사용 커넥션 유지 시간)
spring.datasource.hikari.idle-timeout=600000
# 30분 (최대 커넥션 유지 시간)
spring.datasource.hikari.max-lifetime=1800000
# 5분 (유지 시간)
spring.datasource.hikari.keepalive-time=300000
 
## JPA
## 접속할 database의 SQL Dialect 설정
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect
## true로 설정할 시 sql 출력문을 보기 좋게 출력해줍니다. false라면 한줄로
spring.jpa.properties.hibernate.show_sql= false
spring.jpa.properties.hibernate.format_sql=true	
spring.jpa.properties.hibernate.highlight_sql=true

# SQL 주석 추가 (가독성 향상)
spring.jpa.properties.hibernate.use_sql_comments=true


## logger를 통해 하이버네이트 실행 SQL을 남기는
##logging.level.org.hibernate.SQL=debug
##logging.level.org.hibernate.type.descriptor.sql=trace

##spring.profiles.active=local
logging.config=classpath:logback/logback-spring.xml

##CORS 예외 주소
app.cors.allowedOrigins=\
http://localhost:8080,